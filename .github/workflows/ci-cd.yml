name: CI/CD Pipeline

on:
  push:
    branches:
      - "feature/*" # Push sur une branche de feature
  pull_request:
    branches:
      - main # Pull request vers la branche principale
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18] # Tester contre plusieurs versions de Node.js
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run ESLint
        run: npm run lint # Assurez-vous que le script "lint" existe dans package.json

      - name: Scan Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v1.5.0 # Utiliser la version v1.5.0 de Hadolint

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/ci # Utiliser la configuration de Semgrep pour le CI

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest

      - name: Security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest
